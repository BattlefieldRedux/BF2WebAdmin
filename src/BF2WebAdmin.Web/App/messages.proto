syntax = "proto2";

message ChatEvent {
   optional MessageDto Message = 1;
}
message GameStateEvent {
   optional string State = 1;
}
message IMessage {
   optional IMessagePayload Payload = 1;
   optional string ServerId = 2;
   optional string Type = 3;
}
message IMessagePayload {
   // the following represent sub-types; at most 1 should have a value
   optional PlayerJoinEvent PlayerJoinEvent = 1;
   optional PlayerLeftEvent PlayerLeftEvent = 2;
   optional PlayerPositionEvent PlayerPositionEvent = 3;
   optional PlayerVehicleEvent PlayerVehicleEvent = 4;
   optional PlayerKillEvent PlayerKillEvent = 5;
   optional PlayerDeathEvent PlayerDeathEvent = 6;
   optional PlayerSpawnEvent PlayerSpawnEvent = 7;
   optional PlayerTeamEvent PlayerTeamEvent = 8;
   optional PlayerScoreEvent PlayerScoreEvent = 9;
   optional ProjectilePositionEvent ProjectilePositionEvent = 10;
   optional ChatEvent ChatEvent = 11;
   optional ServerUpdateEvent ServerUpdateEvent = 12;
   optional GameStateEvent GameStateEvent = 13;
   optional MapChangeEvent MapChangeEvent = 14;
   optional UserConnectAction UserConnectAction = 101;
   optional UserDisconnectAction UserDisconnectAction = 102;
}
message MapChangeEvent {
   optional string Map = 1;
   optional int32 Size = 2 [default = 0];
}
message MessageDto {
   optional string Channel = 1;
   optional string Flags = 2;
   optional int32 PlayerId = 3 [default = 0];
   optional string Text = 4;
   optional string Time = 5;
   optional string Type = 6;
}
message PlayerDeathEvent {
   optional int32 PlayerId = 1 [default = 0];
   optional Vector3 Position = 2;
}
message PlayerDto {
   optional string Country = 1;
   optional string Hash = 2;
   optional int32 Index = 3 [default = 0];
   optional string IpAddress = 4;
   optional bool IsAlive = 5 [default = false];
   optional string Name = 6;
   optional int32 Rank = 7 [default = 0];
   optional ScoreDto Score = 8;
   optional int32 Team = 9 [default = 0];
}
message PlayerJoinEvent {
   optional PlayerDto Player = 1;
}
message PlayerKillEvent {
   optional int32 AttackerId = 1 [default = 0];
   optional Vector3 AttackerPosition = 2;
   optional int32 VictimId = 3 [default = 0];
   optional Vector3 VictimPosition = 4;
   optional string Weapon = 5;
}
message PlayerLeftEvent {
   optional int32 PlayerId = 1 [default = 0];
}
message PlayerPositionEvent {
   optional int32 Ping = 1 [default = 0];
   optional int32 PlayerId = 2 [default = 0];
   optional Vector3 Position = 3;
   optional Vector3 Rotation = 4;
}
message PlayerScoreEvent {
   optional int32 Deaths = 1 [default = 0];
   optional int32 Kills = 2 [default = 0];
   optional int32 PlayerId = 3 [default = 0];
   optional int32 TeamScore = 4 [default = 0];
   optional int32 TotalScore = 5 [default = 0];
}
message PlayerSpawnEvent {
   optional int32 PlayerId = 1 [default = 0];
   optional Vector3 Position = 2;
   optional Vector3 Rotation = 3;
}
message PlayerTeamEvent {
   optional int32 PlayerId = 1 [default = 0];
   optional int32 TeamId = 2 [default = 0];
}
message PlayerVehicleEvent {
   optional int32 PlayerId = 1 [default = 0];
   optional VehicleDto Vehicle = 2;
}
message ProjectilePositionEvent {
   optional Vector3 Position = 1;
   optional int32 ProjectileId = 2 [default = 0];
   optional Vector3 Rotation = 3;
   optional string Template = 4;
}
message ScoreDto {
   optional int32 Deaths = 1 [default = 0];
   optional int32 Kills = 2 [default = 0];
   optional int32 Ping = 3 [default = 0];
   optional int32 Team = 4 [default = 0];
   optional int32 Total = 5 [default = 0];
}
message ServerUpdateEvent {
   optional int32 GamePort = 1 [default = 0];
   optional string Id = 2;
   optional string IpAddress = 3;
   optional string Map = 4;
   optional int32 MaxPlayers = 5 [default = 0];
   optional string Name = 6;
   optional int32 Players = 7 [default = 0];
   optional int32 QueryPort = 8 [default = 0];
}
message UserConnectAction {
   optional string Id = 1;
}
message UserDisconnectAction {
   optional string Id = 1;
}
message Vector3 {
   optional double X = 1 [default = 0];
   optional double Y = 2 [default = 0];
   optional double Z = 3 [default = 0];
}
message VehicleDto {
   optional int32 RootVehicleId = 1 [default = 0];
   optional string RootVehicleTemplate = 2;
}
